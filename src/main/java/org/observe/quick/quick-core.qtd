<?xml version="1.0" encoding="UTF-8"?>

<qonfig-def name="Quick-Core" version="0.1" root="quick,style-sheet" extends:expresso="Expresso-Base v0.1" extends:style="Quick-Style v0.1">
	<value-types>
		<one-of name="window-close-action">
			<literal>do-nothing</literal>
			<literal>hide</literal>
			<literal>dispose</literal>
			<literal>exit</literal>
		</one-of>

		<one-of name="mouse-button">
			<literal>left</literal>
			<literal>right</literal>
			<literal>middle</literal>
		</one-of>

		<pattern name="widget-name">((?&lt;ns&gt;[a-zA-Z_\\-]+)\:)?(?&lt;widget&gt;[a-zA-Z_\\-]+)</pattern>
	</value-types>

	<add-ons>
		<add-on name="window">
			<attribute name="x" type="expression" specify="optional" />
			<attribute name="y" type="expression" specify="optional" />
			<attribute name="height" type="expression" specify="optional" />
			<attribute name="width" type="expression" specify="optional" />
			<attribute name="title" type="expression" specify="optional" />
			<attribute name="visible" type="expression" specify="optional" />
			<attribute name="close-action" type="window-close-action" default="hide" />
		</add-on>

		<add-on name="with-text" inherits="styled" abstract="true">
			<styles>
				<style-attribute name="font-color" type="java.awt.Color" trickle-down="true" />
				<style-attribute name="font-size" type="double" trickle-down="true" />
				<style-attribute name="font-weight" type="double" trickle-down="true" />
				<style-attribute name="font-slant" type="double" trickle-down="true" />
			</styles>
		</add-on>

		<add-on name="renderer" requires="widget" abstract="true" />
	</add-ons>

	<elements>
		<element-def name="quick">
			<child-def name="head" type="head" min="0" />
			<child-def name="body" type="widget" min="1" />
		</element-def>
		<element-def name="head" extends="expresso" inherits="with-style-sheet" />

		<element-def name="widget" abstract="true" inherits="with-text">
			<element-model>
				<value name="hovered" type="boolean" priority="5" />
				<value name="focused" type="boolean" priority="1" />
				<value name="pressed" type="boolean" priority="10" />
				<value name="rightPressed" type="boolean" priority="11" />
			</element-model>
			<styles>
				<style-attribute name="color" type="java.awt.Color" />
			</styles>
			<!-- Local variables, visible to any children also -->
			<attribute name="name" type="string" specify="optional" /> <!-- For debugging -->
			<attribute name="tooltip" type="expression" specify="optional" />
			<attribute name="visible" type="expression" specify="optional" />
			<child-def name="border" type="border" min="0" />
			<child-def name="event-listener" type="event-listener" min="0" max="inf" />
		</element-def>

		<element-def name="event-listener" inherits="with-element-model,with-local-model" abstract="true">
			<element-model>
				<value name="altPressed" type="boolean" />
				<value name="ctrlPressed" type="boolean" />
				<value name="shiftPressed" type="boolean" />
			</element-model>
			<child-def name="filter" type="event-filter" min="0" max="inf" />
			<value type="expression" specify="required" />
		</element-def>
		<element-def name="event-filter">
			<value type="expression" specify="required" />
		</element-def>
		<element-def name="mouse-listener" extends="event-listener" abstract="true">
			<element-model>
				<value name="x" type="int" />
				<value name="y" type="int" />
			</element-model>
		</element-def>
		<element-def name="mouse-button-listener" extends="mouse-listener" abstract="true">
			<element-model>
				<value name="button" />
			</element-model>
			<attribute name="button" type="mouse-button" specify="optional" />
		</element-def>
		<element-def name="on-click" extends="mouse-button-listener">
			<element-model>
				<value name="clickCount" type="int" />
			</element-model>
			<attribute name="click-count" type="expression" specify="optional" />
		</element-def>
		<element-def name="on-mouse-press" extends="mouse-button-listener" />
		<element-def name="on-mouse-release" extends="mouse-button-listener" />
		<element-def name="on-mouse-move" extends="mouse-listener" />
		<element-def name="on-mouse-enter" extends="mouse-listener" />
		<element-def name="on-mouse-exit" extends="mouse-listener" />
		<element-def name="on-scroll" extends="mouse-listener">
			<element-model>
				<value name="scrollAmount" type="int" />
			</element-model>
		</element-def>
		<element-def name="key-listener" extends="event-listener" abstract="true" />
		<element-def name="key-code-listener" extends="key-listener" abstract="true">
			<element-model>
				<value name="keyCode" type="org.observe.quick.KeyCode" />
			</element-model>
			<attribute name="key" type="identifier" specify="optional" />
		</element-def>
		<element-def name="on-key-press" extends="key-code-listener" />
		<element-def name="on-key-release" extends="key-code-listener" />
		<element-def name="on-type" extends="key-listener">
			<element-model>
				<value name="typedChar" type="char" />
			</element-model>
			<attribute name="char" type="string" specify="optional" />
		</element-def>

		<element-def name="container" extends="widget" abstract="true">
			<child-def name="content" type="widget" min="0" max="inf" />
		</element-def>

		<element-def name="border" abstract="true" inherits="styled">
			<styles>
				<style-attribute name="border-color" type="java.awt.Color" />
				<style-attribute name="thickness" type="int" />
			</styles>
		</element-def>
		<element-def name="line-border" extends="border" />
		<element-def name="titled-border" extends="line-border" inherits="with-text">
			<attribute name="title" type="expression" specify="required" />
		</element-def>

		<!-- Now a basic outline of abstract Quick widgets -->
		<element-def name="value-widget" extends="widget" abstract="true" >
			<element-model>
				<value name-attribute="value-name" source-attribute="value" priority="1" />
			</element-model>
			<attribute name="value-name" type="identifier" default="value" />
			<attribute name="value" type="expression" specify="required" />
			<attribute name="disable-with" type="expression" specify="optional" />
		</element-def>
		<element-def name="text-widget" extends="value-widget" abstract="true">
			<attribute name="format" type="expression" specify="optional" />
			<attribute name="editable" type="expression" specify="optional" />
		</element-def>
	</elements>
</qonfig-def>
